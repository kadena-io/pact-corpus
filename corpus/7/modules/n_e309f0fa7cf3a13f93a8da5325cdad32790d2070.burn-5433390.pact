(module burn GOVERNANCE

; ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣀⣀⣤⠤⠔⠒⠒⠒⠛⠓⠒⠒⠚⠋⠛⠒⠦⢤⣄⣀⣀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
; ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⡠⠴⠒⠋⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠘⣏⡛⠶⣤⣀⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀
; ⠀⠀⠀⠀⠀⠀⠀⣀⠤⠚⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠙⠲⡄⠉⠛⢷⣦⡀⠀⠀⠀⠀⠀⠀
; ⠀⠀⠀⠀⠀⣠⠞⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠘⢦⣀⠀⡈⠻⣦⡀⠀⠀⠀⠀
; ⠀⠀⠀⢠⠞⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠓⠙⢦⡘⠻⣦⡀⠀⠀
; ⠀⠀⣠⠏⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠙⣄⠈⣷⡀⠀
; ⠀⢠⠟⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⢦⠹⣧⠀
; ⠀⡾⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠃⠹⡆
; ⢸⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣀⠀⠀⣧
; ⣼⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢹
; ⣿⡄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⡀⠀⠀⢸
; ⢿⡇⠀⠀⣤⡀⠠⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣠⡏⣴⠋⠀⠀⠀⢸
; ⢸⣇⠀⠀⠙⢿⡄⢷⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡟⢰⠃⠀⠀⠀⠀⡘
; ⠈⣿⡄⠀⠀⠈⣿⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠐⠲⣄⠀⠀⠀⠀⠀⣷⢸⠀⠀⠀⠀⠀⡇
; ⠀⢻⣿⠀⠀⠀⢻⠀⢻⣀⣤⣀⡤⠤⠤⠤⠤⠤⣄⣀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣀⡤⠂⠀⠀⠀⠀⠈⠓⠲⠤⣄⡀⣏⢸⡀⠀⠀⠀⢰⠀
; ⠀⠘⣿⡤⠀⠀⣾⠆⠀⠀⠀⠀⠀⠀⠀⢠⣄⡀⠀⠈⠑⠂⠀⠀⠀⠀⠀⠐⠟⠋⠀⠀⠀⢀⣤⠀⠀⠀⠀⠀⠀⠈⠁⠘⣧⠀⠀⠀⡜⠀
; ⠀⠀⠸⣷⠀⠀⣿⠀⠀⠀⠀⠀⠀⠀⢀⣘⣏⣀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣀⣬⣧⣴⣶⣶⣶⣶⣤⣄⣀⠀⢸⡇⠀⡼⠁⠀
; ⠀⠀⠀⢿⡆⢰⡏⠀⢀⣴⣶⣿⣿⣿⣿⣿⣿⣿⣿⣷⣄⠀⠀⠀⠀⠀⠀⠀⠀⠀⣴⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣷⡀⢳⣸⠁⠀⠀
; ⠀⠀⠀⢸⣧⣾⠀⠀⣾⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡇⢀⡠⠄⡶⢤⣀⠀⢸⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡇⠘⡟⠀⠀⠀
; ⠀⠀⠀⠀⣿⠇⠀⢰⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠟⠁⠀⠀⡇⠀⠙⠓⠺⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡇⠀⢿⠀⠀⠀
; ⠀⠀⠀⢰⡏⠀⠀⠸⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡿⠀⠀⠀⠀⡇⠀⠀⠀⠀⢿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡇⠀⢸⣄⠀⠀
; ⠀⢰⣶⡿⠃⠀⠀⠀⢿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡿⠋⠀⠀⠀⠀⠀⠹⠀⠀⠀⠀⠈⢿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡟⠀⠀⠀⠈⢱⡄
; ⠀⣿⡄⠀⠀⠀⠀⠀⠈⠻⠿⣿⣿⣿⡿⠟⠋⠁⠀⠀⠀⠀⠀⠀⣶⠇⣾⡇⠀⠀⠀⠀⠉⠛⠻⠿⣿⣿⠿⠟⠛⠋⠁⠀⠀⠀⠀⠀⣸⠀
; ⠀⢸⣿⠀⠀⠀⠀⠀⠀⠀⠀⡴⠋⠉⠁⠀⠀⠀⠀⠀⠀⠀⠀⣸⣿⠀⣿⣿⡀⠀⠀⠀⠀⠀⠀⠀⠀⠉⠳⣤⠀⠀⠀⠀⠀⠀⠀⠀⡿⠀
; ⠀⠀⢿⣖⠀⠀⠀⠀⠀⣴⠊⠁⠀⠀⢀⡴⠾⠃⠀⠀⠀⠀⣰⣿⣿⡀⣿⣿⣧⠀⠀⠀⠀⠀⣴⠶⠂⠀⠀⠉⠳⡄⠀⠀⠀⠀⠀⣠⠇⠀
; ⠀⠀⠈⠻⣆⣀⣀⠀⡠⠋⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢰⣿⣿⣿⠇⣿⣿⣿⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠳⡀⢀⣠⡤⠞⠁⠀⠀
; ⠀⠀⠀⠀⠀⠉⣏⠙⠓⠢⢤⣤⣀⣀⠀⠀⠀⠀⠀⠀⠀⢸⣿⣿⣿⠀⣿⣿⣿⠇⠀⠀⠀⠀⠀⠀⠀⠀⢀⣠⠴⠒⠛⢹⡇⠀⠀⠀⠀⠀
; ⠀⠀⠀⠀⠀⠀⠸⡆⠀⠀⠀⣿⡀⠙⣧⡀⠀⠀⠀⠀⠀⠈⠛⠛⠋⢀⡘⠛⠋⠀⠀⠀⠀⠀⠀⠀⢀⣴⠋⡿⠀⠀⠀⣸⠁⠀⠀⠀⠀⠀
; ⠀⠀⠀⠀⠀⠀⠀⢿⠀⠀⠀⠸⣷⠀⣿⡀⠀⠀⣀⢀⡀⢠⠄⠀⠀⠘⡗⢀⠀⢰⡆⠰⣧⠠⡄⠀⣾⠇⡸⠁⠀⠀⠀⡏⠀⠀⠀⠀⠀⠀
; ⠀⠀⠀⠀⠀⠀⠀⢸⠀⠀⠀⠀⠻⣆⠸⣧⠀⠀⣗⡞⢀⠟⠀⠀⠀⢨⡇⠈⠀⠸⣇⢀⣈⣀⠃⢸⡟⣼⠃⠀⠀⠀⠀⡇⠀⠀⠀⠀⠀⠀
; ⠀⠀⠀⠀⠀⠀⠀⢸⠀⠀⠀⠀⠀⢻⣴⢿⣿⡛⡞⡟⠛⡷⢴⡾⠿⣶⠞⢻⡷⣶⡚⢿⡝⣿⣿⣿⣿⠃⠀⠀⠀⠀⠀⡇⠀⠀⠀⠀⠀⠀
; ⠀⠀⠀⠀⠀⠀⠀⢸⡀⠀⠀⠀⠀⠀⠙⢾⣾⣥⣷⣧⣠⣇⢸⡇⠀⣿⠀⠈⣷⢸⣧⣸⡷⣿⢿⣍⡟⠀⠀⠀⠀⠀⣸⡇⠀⠀⠀⠀⠀⠀
; ⠀⠀⠀⠀⠀⠀⠀⠘⣧⡀⠀⠀⠀⠀⠀⠸⣿⣷⡇⡏⢾⢩⣿⢻⠛⣿⠓⡟⠹⡏⢻⠀⣿⣼⠾⠏⠀⠀⠀⠀⠀⣠⠟⠀⠀⠀⠀⠀⠀⠀
; ⠀⠀⠀⠀⠀⠀⠀⠀⠈⠻⣦⡀⠀⠀⠀⠀⠀⠈⠙⠳⠾⠾⢿⣾⣷⣿⣰⣿⣴⠷⠚⠉⠁⠀⠀⠀⠀⠀⠀⠀⣴⠏⠀⠀⠀⠀⠀⠀⠀⠀
; ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠳⣦⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣤⠀⠀⢠⡞⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀
; ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠙⣦⡘⠚⠛⠀⠀⠀⠀⠀⢀⡴⠀⢰⣿⠀⠀⠀⠀⠀⠀⠉⠁⠀⣠⠏⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
; ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠘⢷⣄⠀⠀⠀⠀⠠⠖⠉⠀⠀⠈⠻⠲⠤⢤⠀⠀⠀⠀⣀⡜⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
; ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠉⠻⢶⣄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⡴⠊⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
; ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢹⣷⣤⣤⣀⣀⣤⠤⠤⠤⠤⠴⠚⠁⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀


(defcap GOVERNANCE ()
(enforce (> LOCKDATE (curr-time) ) "Cannot update contract after lock date")
(enforce-guard (keyset-ref-guard "n_e309f0fa7cf3a13f93a8da5325cdad32790d2070.ktgguard"))
)

(defcap BURN () true)
(defconst BURN-GUARD (create-capability-guard (BURN)))
(defconst BURN-ACCOUNT (create-principal BURN-GUARD))
(defconst BURN7:decimal 1039993.6064564)
(defconst LOCKDATE:time (time "2024-07-30T00:00:00Z"))

; Functions

(defun get-balance:decimal (f:module{fungible-v2})
    @doc "Returns the balance of burn account per given token"
    (f::get-balance BURN-ACCOUNT)
)

(defun get-burn:decimal ()
    @doc "Returns the balance of the Heron burn account"
    (let (
         (b:decimal (heron.get-balance BURN-ACCOUNT))
         )
         (+ BURN7 b)
    )
)

(defun create-burn-wallet:string (f:module{fungible-v2})
    @doc "Creates a new burn wallet per given fungible token"
        (f::create-account BURN-ACCOUNT BURN-GUARD)
        (format "{} wallet created for {}" [BURN-ACCOUNT f])
)

(defun curr-time:time ()
    @doc "Returns current chain's block-time"
    (at 'block-time (chain-data)))

(defun init ()
(heron.create-account BURN-ACCOUNT BURN-GUARD)
(coin.create-account BURN-ACCOUNT BURN-GUARD)
)

)


